  name: Deploy and run containers - EC2

on:
  workflow_dispatch:
    branches: [main]

jobs:
  
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: '2'
          region: ${{ vars.AWS_REGION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Start SSM Session
        run: |
          aws configure set region ${{ vars.AWS_REGION }}
          aws ssm start-session --target "$(aws ec2 describe-instances --filters "Name=tag:Name,Values=hrhouz-server" --query 'Reservations[*].Instances[*].InstanceId' --output text)"


      - name: Authenticate Docker with ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ needs.build-push.steps.login-ecr.outputs.registry }}

      - name: Pull and run container
        run: |
          docker pull aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ needs.build-push.steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY_NAME }}:latest
          docker run -d ${{ needs.build-push.steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY_NAME }}:latest